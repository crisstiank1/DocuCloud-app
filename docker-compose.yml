version: '3.8'

services:
  # 1. Base de Datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: docucloud-db-dev
    restart: always
    # Las variables se cargan automáticamente desde el archivo .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - docucloud-pg-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. Backend (Spring Boot API)
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: docucloud-backend-dev
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SERVER_PORT: ${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy
    # Modo Desarrollo: Montar código fuente para Live Reload/recompilación rápida
    volumes:
      # Monta el código del proyecto para que los cambios se reflejen (específico de Spring Boot/Maven)
      - ./Backend:/app
      - /root/.m2:/root/.m2 # Cache de dependencias de Maven
    
  # 3. Frontend (Vue.js SPA servido por Nginx)
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: docucloud-frontend-dev
    restart: always
    ports:
      - "${FRONTEND_PORT}:80" # Nginx expone 80, lo mapeamos al FRONTEND_PORT (default 80)
    depends_on:
      - backend
      #- classifier # Descomentar cuando el servicio classifier esté listo
    # Modo Desarrollo: Montar el código de Nginx para ver los cambios de configuración sin rebuild
    volumes:
      # Monta el nginx.conf de desarrollo
      - ./Frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Monta la carpeta dist de Vue después de la construcción (asumiendo que se monta en el Dockerfile)
      # Nota: En desarrollo puro con Vue CLI, a menudo se usa "npm run dev" fuera de Docker,
      # pero si lo quieres con Docker, la imagen final debería copiar el 'dist'.
      # Mapeamos la salida de la compilación de Vue para ser servida por Nginx
      - ./Frontend/dist:/usr/share/nginx/html:ro

# Comentar este servicio hasta que ClasificadorDocuCloud esté listo.
# classifier:
#   ...

# Volúmenes para persistencia de datos
volumes:
  docucloud-pg-data:
    driver: local
